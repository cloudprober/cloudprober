name: Go Build and Test
on: [push, pull_request]
jobs:

  build-and-test:
    name: Build and Test
    env:
      # UDP tests use this variable to disable IPv6.
      TRAVIS: yes
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - name: Set up Go 1.16
      uses: actions/setup-go@v1
      with:
        go-version: 1.16
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Set environment varible to skip UDP test on MAC OS
      if:  ${{ matrix.os == 'macos-latest' }}
      run: echo "EXTRA_TEST_FLAGS=-tags skip_udp_probe_test" >> $GITHUB_ENV
      
    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Build
      run: go build -v .

    - name: Test
      run: go test ${{ env.EXTRA_TEST_FLAGS }} -v -race -covermode=atomic ./...
      
  build-binary:
    name: Build cloudprober binary
    needs: [build-and-test]
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up Go 1.16
      uses: actions/setup-go@v1
      with:
        go-version: 1.16
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - run: |
        make cloudprober-linux-{amd64,arm64,armv7} cloudprober-macos-{amd64,arm64} cloudprober-windows-amd64
  
    - run: |
        for bin in cloudprober-*; do
          bindir=${bin/amd64/x86_64}
          bindir=cloudprober-$(git describe --tags)-${bindir/cloudprober-/}
          mkdir -p $bindir
          cp $bin ${bindir}/cloudprober
          chmod a+rx ${bindir}/cloudprober
          zip -r ${bindir}.zip ${bindir}/
          rm -rf ${bindir}
        done

    - name: Upload cloudprober dist
      uses: actions/upload-artifact@v2
      with:
        name: cloudprober-dist
        path: |
          cloudprober
          cloudprober-*
      
  build_and_push_docker:
    name: Build and push docker image
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
    needs: [build-binary]
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Download cloudprober binary
      uses: actions/download-artifact@v2
      with:
        name: cloudprober-dist
    
    - run: |
        cp cloudprober-linux-amd64 cloudprober
        ls -R cloudprober*
        chmod a+rx cloudprober cloudprober-*
    
    - name: Build Docker Image
      run: make docker_build

    - name: Push Docker Image
      env: 
        DOCKER_USER: ${{ secrets.docker_login }}
        DOCKER_PASS: ${{ secrets.docker_pass }}
      run: make docker_push DOCKER_VERSION=master

    - name: Push Docker Image With Version
      if: startsWith(github.ref, 'refs/tags')
      env: 
        DOCKER_USER: ${{ secrets.docker_login }}
        DOCKER_PASS: ${{ secrets.docker_pass }}
      run: make docker_push_tagged
      
  build_and_push_contrib_docker:
    name: Build and push contrib docker image
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
    needs: [build-binary]
    runs-on: ubuntu-latest
      
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Download cloudprober binary
      uses: actions/download-artifact@v2
      with:
        name: cloudprober-dist

    - run: |
        cp cloudprober-linux-amd64 cloudprober
        ls -R cloudprober*
        chmod a+rx cloudprober cloudprober-*

    - name: Build Docker Image
      run: |
        mv cloudprober contrib/cloudprober
        make -C contrib docker_build

    - name: Push Docker Image
      env: 
        DOCKER_USER: ${{ secrets.docker_login }}
        DOCKER_PASS: ${{ secrets.docker_pass }}
      run: make -C contrib docker_push DOCKER_VERSION=master

    - name: Push Docker Image With Version
      if: startsWith(github.ref, 'refs/tags')
      env: 
        DOCKER_USER: ${{ secrets.docker_login }}
        DOCKER_PASS: ${{ secrets.docker_pass }}
      run: make -C contrib docker_push_tagged

  build_and_push_docker_multiarch:
    name: Build and push multiarch docker image
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags')
    needs: [build-binary]
    runs-on: ubuntu-latest

    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Download cloudprober binary
      uses: actions/download-artifact@v2
      with:
        name: cloudprober-dist

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.docker_login }}
        password: ${{ secrets.docker_pass }}

    - run: |
        cp cloudprober-linux-amd64 cloudprober
        ls -R cloudprober*
        chmod a+rx cloudprober cloudprober-*

    - name: Build and push Docker Image
      run: |
        make docker_multiarch DOCKER_VERSION=master
