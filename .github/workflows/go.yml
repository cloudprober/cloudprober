name: Go Build and Test
on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to run workflow for'
        required: true

jobs:

  build-and-test:
    name: Build and Test
    env:
      # UDP tests use this variable to disable IPv6.
      TRAVIS: yes
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - name: Set up Go 1.17
      uses: actions/setup-go@v1
      with:
        go-version: 1.17
      id: go

    - name: Check out code into the Go module directory
      if: ${{ !contains(github.event_name, 'workflow_dispatch') }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Check out code into the Go module directory
      if: ${{ contains(github.event_name, 'workflow_dispatch') }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.event.inputs.tag }}

    - name: Set environment varible to skip UDP test on MAC OS
      if:  ${{ matrix.os == 'macos-latest' }}
      run: echo "EXTRA_TEST_FLAGS=-tags skip_udp_probe_test" >> $GITHUB_ENV

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Build
      run: go build -v .

    - name: Test
      run: go test ${{ env.EXTRA_TEST_FLAGS }} -v -race -covermode=atomic ./...

    - run: make cloudprober-linux-{amd64,arm64,armv7}
      if:  ${{ matrix.os == 'ubuntu-latest' }}

    - run: make cloudprober-macos-{amd64,arm64} cloudprober-windows-amd64
      if:  ${{ matrix.os == 'macos-latest' }}

    - name: Upload cloudprober dist
      if:  ${{ matrix.os != 'windows-latest' }}
      uses: actions/upload-artifact@v2
      with:
        name: cloudprober-${{ matrix.os }}-dist
        path: cloudprober-*

  build-dist:
    name: Build cloudprober release
    needs: [build-and-test]
    runs-on: ubuntu-latest

    steps:
    - name: Check out code into the Go module directory
      if: ${{ !contains(github.event_name, 'workflow_dispatch') }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Check out code into the Go module directory
      if: ${{ contains(github.event_name, 'workflow_dispatch') }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.event.inputs.tag }}


    - name: Download ubuntu cloudprober binaries
      uses: actions/download-artifact@v2
      with:
        name: cloudprober-ubuntu-latest-dist

    - name: Download macos cloudprober binaries
      uses: actions/download-artifact@v2
      with:
        name: cloudprober-macos-latest-dist

    - run: |
        for bin in cloudprober-*; do
          bindir=${bin/amd64/x86_64}
          bindir=cloudprober-$(git describe --tags)-${bindir/cloudprober-/}
          mkdir -p $bindir
          cp $bin ${bindir}/cloudprober
          chmod a+rx ${bindir}/cloudprober
          [[ "$bin" == *"windows"* ]] && mv ${bindir}/cloudprober{,.exe}
          zip -r ${bindir}.zip ${bindir}/
          rm -rf ${bindir}
        done

    - name: Upload cloudprober release
      uses: actions/upload-artifact@v2
      with:
        name: cloudprober-release-binaries
        path: cloudprober-*.zip

  build_and_push_docker:
    name: Build and push release docker image
    if: startsWith(github.ref, 'refs/tags')
    needs: [build-and-test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image_type: ['main', 'contrib']

    steps:
    - name: Check out code into the Go module directory
      if: ${{ !contains(github.event_name, 'workflow_dispatch') }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Check out code into the Go module directory
      if: ${{ contains(github.event_name, 'workflow_dispatch') }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.event.inputs.tag }}

    - name: Download cloudprober binary
      uses: actions/download-artifact@v2
      with:
        name: cloudprober-ubuntu-latest-dist

    - run: |
        cp cloudprober-linux-amd64 cloudprober
        ls -R cloudprober*
        chmod a+rx cloudprober cloudprober-*

    - name: Build Docker Image (main)
      if: ${{ matrix.image_type == 'main' }}
      run: make docker_build

    - name: Build Docker Image (contrib)
      if: ${{ matrix.image_type == 'contrib' }}
      run: |
        mv cloudprober contrib/cloudprober
        make -C contrib docker_build

    - name: Push Docker Image (main)
      if: ${{ matrix.image_type == 'main' }}
      env:
        DOCKER_USER: ${{ secrets.docker_login }}
        DOCKER_PASS: ${{ secrets.docker_pass }}
      run: make docker_push_tagged

    - name: Push Docker Image (contrib)
      if: ${{ matrix.image_type == 'contrib' }}
      env:
        DOCKER_USER: ${{ secrets.docker_login }}
        DOCKER_PASS: ${{ secrets.docker_pass }}
      run: make -C contrib docker_push_tagged

  build_and_push_docker_multiarch:
    name: Build and push multiarch docker image
    if: github.ref == 'refs/heads/master'
    needs: [build-and-test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image_type: ['main', 'contrib']

    steps:
    - name: Check out code into the Go module directory
      if: ${{ !contains(github.event_name, 'workflow_dispatch') }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Check out code into the Go module directory
      if: ${{ contains(github.event_name, 'workflow_dispatch') }}
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.event.inputs.tag }}

    - name: Download cloudprober binary
      uses: actions/download-artifact@v2
      with:
        name: cloudprober-ubuntu-latest-dist

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.docker_login }}
        password: ${{ secrets.docker_pass }}

    - run: |
        cp cloudprober-linux-amd64 cloudprober
        ls -R cloudprober*
        chmod a+rx cloudprober cloudprober-*

    - name: Build and push Docker Image (main)
      if: ${{ matrix.image_type == 'main' }}
      run: make docker_multiarch DOCKER_VERSION=master