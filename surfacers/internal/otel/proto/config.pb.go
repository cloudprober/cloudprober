// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.27.5
// source: github.com/cloudprober/cloudprober/surfacers/internal/otel/proto/config.proto

package proto

import (
	proto "github.com/cloudprober/cloudprober/common/tlsconfig/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Compression int32

const (
	Compression_NONE Compression = 0
	Compression_GZIP Compression = 1
)

// Enum value maps for Compression.
var (
	Compression_name = map[int32]string{
		0: "NONE",
		1: "GZIP",
	}
	Compression_value = map[string]int32{
		"NONE": 0,
		"GZIP": 1,
	}
)

func (x Compression) Enum() *Compression {
	p := new(Compression)
	*p = x
	return p
}

func (x Compression) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Compression) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_enumTypes[0].Descriptor()
}

func (Compression) Type() protoreflect.EnumType {
	return &file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_enumTypes[0]
}

func (x Compression) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Compression) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Compression(num)
	return nil
}

// Deprecated: Use Compression.Descriptor instead.
func (Compression) EnumDescriptor() ([]byte, []int) {
	return file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDescGZIP(), []int{0}
}

type HTTPExporter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If no URL is provided, OpenTelemetry SDK will use the environment variable
	// OTEL_EXPORTER_OTLP_METRICS_ENDPOINT or OTEL_EXPORTER_OTLP_ENDPOINT in that
	// preference order.
	EndpointUrl *string          `protobuf:"bytes,1,opt,name=endpoint_url,json=endpointUrl" json:"endpoint_url,omitempty"`
	TlsConfig   *proto.TLSConfig `protobuf:"bytes,2,opt,name=tls_config,json=tlsConfig" json:"tls_config,omitempty"`
	// HTTP request headers. These can also be set using environment variables.
	HttpHeader map[string]string `protobuf:"bytes,3,rep,name=http_header,json=httpHeader" json:"http_header,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Compression algorithm to use for HTTP requests.
	Compression   *Compression `protobuf:"varint,4,opt,name=compression,enum=cloudprober.surfacer.otel.Compression" json:"compression,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HTTPExporter) Reset() {
	*x = HTTPExporter{}
	mi := &file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HTTPExporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPExporter) ProtoMessage() {}

func (x *HTTPExporter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPExporter.ProtoReflect.Descriptor instead.
func (*HTTPExporter) Descriptor() ([]byte, []int) {
	return file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDescGZIP(), []int{0}
}

func (x *HTTPExporter) GetEndpointUrl() string {
	if x != nil && x.EndpointUrl != nil {
		return *x.EndpointUrl
	}
	return ""
}

func (x *HTTPExporter) GetTlsConfig() *proto.TLSConfig {
	if x != nil {
		return x.TlsConfig
	}
	return nil
}

func (x *HTTPExporter) GetHttpHeader() map[string]string {
	if x != nil {
		return x.HttpHeader
	}
	return nil
}

func (x *HTTPExporter) GetCompression() Compression {
	if x != nil && x.Compression != nil {
		return *x.Compression
	}
	return Compression_NONE
}

type GRPCExporter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If no URL is provided, OpenTelemetry SDK will use the environment variable
	// OTEL_EXPORTER_OTLP_METRICS_ENDPOINT or OTEL_EXPORTER_OTLP_ENDPOINT in that
	// preference order.
	Endpoint  *string          `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	TlsConfig *proto.TLSConfig `protobuf:"bytes,2,opt,name=tls_config,json=tlsConfig" json:"tls_config,omitempty"`
	// HTTP request headers. These can also be set using environment variables.
	HttpHeader map[string]string `protobuf:"bytes,3,rep,name=http_header,json=httpHeader" json:"http_header,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Compression algorithm to use for gRPC requests.
	Compression *Compression `protobuf:"varint,4,opt,name=compression,enum=cloudprober.surfacer.otel.Compression" json:"compression,omitempty"`
	// Whether to use insecure gRPC connection.
	Insecure      *bool `protobuf:"varint,5,opt,name=insecure" json:"insecure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GRPCExporter) Reset() {
	*x = GRPCExporter{}
	mi := &file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GRPCExporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GRPCExporter) ProtoMessage() {}

func (x *GRPCExporter) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GRPCExporter.ProtoReflect.Descriptor instead.
func (*GRPCExporter) Descriptor() ([]byte, []int) {
	return file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDescGZIP(), []int{1}
}

func (x *GRPCExporter) GetEndpoint() string {
	if x != nil && x.Endpoint != nil {
		return *x.Endpoint
	}
	return ""
}

func (x *GRPCExporter) GetTlsConfig() *proto.TLSConfig {
	if x != nil {
		return x.TlsConfig
	}
	return nil
}

func (x *GRPCExporter) GetHttpHeader() map[string]string {
	if x != nil {
		return x.HttpHeader
	}
	return nil
}

func (x *GRPCExporter) GetCompression() Compression {
	if x != nil && x.Compression != nil {
		return *x.Compression
	}
	return Compression_NONE
}

func (x *GRPCExporter) GetInsecure() bool {
	if x != nil && x.Insecure != nil {
		return *x.Insecure
	}
	return false
}

type SurfacerConf struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Exporter:
	//
	//	*SurfacerConf_OtlpHttpExporter
	//	*SurfacerConf_OtlpGrpcExporter
	Exporter isSurfacerConf_Exporter `protobuf_oneof:"exporter"`
	// How often metrics will be exported. Note that metrics are accumulated
	// internally and exported at this interval. Increasing this value will
	// increase the memory usage.
	ExportIntervalSec *int32 `protobuf:"varint,3,opt,name=export_interval_sec,json=exportIntervalSec,def=10" json:"export_interval_sec,omitempty"`
	// Prefix to use for metrics. Defaults to "cloudprober_".
	MetricsPrefix     *string                   `protobuf:"bytes,4,opt,name=metrics_prefix,json=metricsPrefix,def=cloudprober_" json:"metrics_prefix,omitempty"`
	ResourceAttribute []*SurfacerConf_Attribute `protobuf:"bytes,5,rep,name=resource_attribute,json=resourceAttribute" json:"resource_attribute,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

// Default values for SurfacerConf fields.
const (
	Default_SurfacerConf_ExportIntervalSec = int32(10)
	Default_SurfacerConf_MetricsPrefix     = string("cloudprober_")
)

func (x *SurfacerConf) Reset() {
	*x = SurfacerConf{}
	mi := &file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SurfacerConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurfacerConf) ProtoMessage() {}

func (x *SurfacerConf) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurfacerConf.ProtoReflect.Descriptor instead.
func (*SurfacerConf) Descriptor() ([]byte, []int) {
	return file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDescGZIP(), []int{2}
}

func (x *SurfacerConf) GetExporter() isSurfacerConf_Exporter {
	if x != nil {
		return x.Exporter
	}
	return nil
}

func (x *SurfacerConf) GetOtlpHttpExporter() *HTTPExporter {
	if x != nil {
		if x, ok := x.Exporter.(*SurfacerConf_OtlpHttpExporter); ok {
			return x.OtlpHttpExporter
		}
	}
	return nil
}

func (x *SurfacerConf) GetOtlpGrpcExporter() *GRPCExporter {
	if x != nil {
		if x, ok := x.Exporter.(*SurfacerConf_OtlpGrpcExporter); ok {
			return x.OtlpGrpcExporter
		}
	}
	return nil
}

func (x *SurfacerConf) GetExportIntervalSec() int32 {
	if x != nil && x.ExportIntervalSec != nil {
		return *x.ExportIntervalSec
	}
	return Default_SurfacerConf_ExportIntervalSec
}

func (x *SurfacerConf) GetMetricsPrefix() string {
	if x != nil && x.MetricsPrefix != nil {
		return *x.MetricsPrefix
	}
	return Default_SurfacerConf_MetricsPrefix
}

func (x *SurfacerConf) GetResourceAttribute() []*SurfacerConf_Attribute {
	if x != nil {
		return x.ResourceAttribute
	}
	return nil
}

type isSurfacerConf_Exporter interface {
	isSurfacerConf_Exporter()
}

type SurfacerConf_OtlpHttpExporter struct {
	// OTLP HTTP exporter.
	OtlpHttpExporter *HTTPExporter `protobuf:"bytes,1,opt,name=otlp_http_exporter,json=otlpHttpExporter,oneof"`
}

type SurfacerConf_OtlpGrpcExporter struct {
	// OTLP gRPC exporter.
	OtlpGrpcExporter *GRPCExporter `protobuf:"bytes,2,opt,name=otlp_grpc_exporter,json=otlpGrpcExporter,oneof"`
}

func (*SurfacerConf_OtlpHttpExporter) isSurfacerConf_Exporter() {}

func (*SurfacerConf_OtlpGrpcExporter) isSurfacerConf_Exporter() {}

// Additional attributes to be added to all the metrics.
type SurfacerConf_Attribute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *string                `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value         *string                `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SurfacerConf_Attribute) Reset() {
	*x = SurfacerConf_Attribute{}
	mi := &file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SurfacerConf_Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurfacerConf_Attribute) ProtoMessage() {}

func (x *SurfacerConf_Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurfacerConf_Attribute.ProtoReflect.Descriptor instead.
func (*SurfacerConf_Attribute) Descriptor() ([]byte, []int) {
	return file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SurfacerConf_Attribute) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *SurfacerConf_Attribute) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

var File_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto protoreflect.FileDescriptor

const file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDesc = "" +
	"\n" +
	"Mgithub.com/cloudprober/cloudprober/surfacers/internal/otel/proto/config.proto\x12\x19cloudprober.surfacer.otel\x1aFgithub.com/cloudprober/cloudprober/common/tlsconfig/proto/config.proto\"\xd5\x02\n" +
	"\fHTTPExporter\x12!\n" +
	"\fendpoint_url\x18\x01 \x01(\tR\vendpointUrl\x12?\n" +
	"\n" +
	"tls_config\x18\x02 \x01(\v2 .cloudprober.tlsconfig.TLSConfigR\ttlsConfig\x12X\n" +
	"\vhttp_header\x18\x03 \x03(\v27.cloudprober.surfacer.otel.HTTPExporter.HttpHeaderEntryR\n" +
	"httpHeader\x12H\n" +
	"\vcompression\x18\x04 \x01(\x0e2&.cloudprober.surfacer.otel.CompressionR\vcompression\x1a=\n" +
	"\x0fHttpHeaderEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xea\x02\n" +
	"\fGRPCExporter\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12?\n" +
	"\n" +
	"tls_config\x18\x02 \x01(\v2 .cloudprober.tlsconfig.TLSConfigR\ttlsConfig\x12X\n" +
	"\vhttp_header\x18\x03 \x03(\v27.cloudprober.surfacer.otel.GRPCExporter.HttpHeaderEntryR\n" +
	"httpHeader\x12H\n" +
	"\vcompression\x18\x04 \x01(\x0e2&.cloudprober.surfacer.otel.CompressionR\vcompression\x12\x1a\n" +
	"\binsecure\x18\x05 \x01(\bR\binsecure\x1a=\n" +
	"\x0fHttpHeaderEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcc\x03\n" +
	"\fSurfacerConf\x12W\n" +
	"\x12otlp_http_exporter\x18\x01 \x01(\v2'.cloudprober.surfacer.otel.HTTPExporterH\x00R\x10otlpHttpExporter\x12W\n" +
	"\x12otlp_grpc_exporter\x18\x02 \x01(\v2'.cloudprober.surfacer.otel.GRPCExporterH\x00R\x10otlpGrpcExporter\x122\n" +
	"\x13export_interval_sec\x18\x03 \x01(\x05:\x0210R\x11exportIntervalSec\x123\n" +
	"\x0emetrics_prefix\x18\x04 \x01(\t:\fcloudprober_R\rmetricsPrefix\x12`\n" +
	"\x12resource_attribute\x18\x05 \x03(\v21.cloudprober.surfacer.otel.SurfacerConf.AttributeR\x11resourceAttribute\x1a3\n" +
	"\tAttribute\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05valueB\n" +
	"\n" +
	"\bexporter*!\n" +
	"\vCompression\x12\b\n" +
	"\x04NONE\x10\x00\x12\b\n" +
	"\x04GZIP\x10\x01BBZ@github.com/cloudprober/cloudprober/surfacers/internal/otel/proto"

var (
	file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDescOnce sync.Once
	file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDescData []byte
)

func file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDescGZIP() []byte {
	file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDescOnce.Do(func() {
		file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDesc), len(file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDesc)))
	})
	return file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDescData
}

var file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_goTypes = []any{
	(Compression)(0),               // 0: cloudprober.surfacer.otel.Compression
	(*HTTPExporter)(nil),           // 1: cloudprober.surfacer.otel.HTTPExporter
	(*GRPCExporter)(nil),           // 2: cloudprober.surfacer.otel.GRPCExporter
	(*SurfacerConf)(nil),           // 3: cloudprober.surfacer.otel.SurfacerConf
	nil,                            // 4: cloudprober.surfacer.otel.HTTPExporter.HttpHeaderEntry
	nil,                            // 5: cloudprober.surfacer.otel.GRPCExporter.HttpHeaderEntry
	(*SurfacerConf_Attribute)(nil), // 6: cloudprober.surfacer.otel.SurfacerConf.Attribute
	(*proto.TLSConfig)(nil),        // 7: cloudprober.tlsconfig.TLSConfig
}
var file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_depIdxs = []int32{
	7, // 0: cloudprober.surfacer.otel.HTTPExporter.tls_config:type_name -> cloudprober.tlsconfig.TLSConfig
	4, // 1: cloudprober.surfacer.otel.HTTPExporter.http_header:type_name -> cloudprober.surfacer.otel.HTTPExporter.HttpHeaderEntry
	0, // 2: cloudprober.surfacer.otel.HTTPExporter.compression:type_name -> cloudprober.surfacer.otel.Compression
	7, // 3: cloudprober.surfacer.otel.GRPCExporter.tls_config:type_name -> cloudprober.tlsconfig.TLSConfig
	5, // 4: cloudprober.surfacer.otel.GRPCExporter.http_header:type_name -> cloudprober.surfacer.otel.GRPCExporter.HttpHeaderEntry
	0, // 5: cloudprober.surfacer.otel.GRPCExporter.compression:type_name -> cloudprober.surfacer.otel.Compression
	1, // 6: cloudprober.surfacer.otel.SurfacerConf.otlp_http_exporter:type_name -> cloudprober.surfacer.otel.HTTPExporter
	2, // 7: cloudprober.surfacer.otel.SurfacerConf.otlp_grpc_exporter:type_name -> cloudprober.surfacer.otel.GRPCExporter
	6, // 8: cloudprober.surfacer.otel.SurfacerConf.resource_attribute:type_name -> cloudprober.surfacer.otel.SurfacerConf.Attribute
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() {
	file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_init()
}
func file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_init() {
	if File_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto != nil {
		return
	}
	file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_msgTypes[2].OneofWrappers = []any{
		(*SurfacerConf_OtlpHttpExporter)(nil),
		(*SurfacerConf_OtlpGrpcExporter)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDesc), len(file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_goTypes,
		DependencyIndexes: file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_depIdxs,
		EnumInfos:         file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_enumTypes,
		MessageInfos:      file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_msgTypes,
	}.Build()
	File_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto = out.File
	file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_goTypes = nil
	file_github_com_cloudprober_cloudprober_surfacers_internal_otel_proto_config_proto_depIdxs = nil
}
