syntax = "proto2";

package cloudprober.surfacer.postgres;

option go_package = "github.com/cloudprober/cloudprober/surfacers/internal/postgres/proto";

message SurfacerConf {
  // Postgres connection string.
  // Example:
  //  "postgresql://root:${PASSWORD}@localhost/cloudprober?sslmode=disable"
  required string connection_string = 1;

  // Metrics table name.
  // To create table (when storing all labels in single column in JSON format):
  // CREATE TABLE metrics (
  //   time timestamp, metric_name varchar(80), value float8, labels jsonb
  // )
  required string metrics_table_name = 2;

  // Adding label_to_column fields changes how labels are stored in a Postgres
  // table. If this field is not specified at all, all the labels are stored as
  // jsonb values as the 'labels' column (this mode impacts performance
  // negatively). If label_to_colum entries are specified for some labels,
  // those labels are stored in their dedicated columns; all the labels that
  // don't have a mapping will be dropped.
  repeated LabelToColumn label_to_column = 4;

  optional int64 metrics_buffer_size = 3 [default = 10000];

  // The maximum number of metric events will be commited in one transaction at one
  // time. Metrics will be stored locally until this limit is reached. Metrics will
  // be commited  to postgres when the timer expires, or the buffer is full, whichever
  // happens first.
  optional int32 metrics_batch_size = 5 [default = 1];

  // The maximum amount of time to hold metrics in the buffer (above).
  // Metrics will be commited  to postgres when the timer expires, or the buffer is full,
  // whichever happens first.
  optional int32 batch_timer_sec = 6 [default = 1];
}

message LabelToColumn {
  // Label name
  required string label = 1;

  // Column to map this label to:
  required string column = 2;
}