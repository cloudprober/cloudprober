<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Get Started on</title><link>https://cloudprober.org/docs/overview/</link><description>Recent content in Get Started on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://cloudprober.org/docs/overview/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started</title><link>https://cloudprober.org/docs/overview/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudprober.org/docs/overview/getting-started/</guid><description>Installation #
If you&amp;rsquo;ve Go installed, you can install cloudprober from source using the following command:
go install github.com/cloudprober/cloudprober/cmd/cloudprober@latest Other Methods: #
Method Instructions Platform Brew brew install cloudprober MacOS, Linux Docker Image docker run ghcr.io/cloudprober/cloudprober (other docker versions) Docker Helm chart See here for instructions Kubernetes Pre-built binaries Download from the releases page. MacOS, Linux, Windows See this page for how to access unreleased binaries.
Configuration #
Without any config, cloudprober will run only the &amp;ldquo;sysvars&amp;rdquo; module (no probes) and write metrics to stdout in cloudprober&amp;rsquo;s line protocol format (to be documented).</description></item><item><title>Overview</title><link>https://cloudprober.org/docs/overview/cloudprober/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudprober.org/docs/overview/cloudprober/</guid><description>Cloudprober provides a reliable and easy-to-use solution to monitor the availability and performance of your systems. Employing an &amp;ldquo;active&amp;rdquo; monitoring approach, Cloudprober executes probes on or against these systems to verify their proper functioning.
For example, you could use Cloudprober to run a probe to verify that your users can access your website and your APIs, your microservices can talk to each other, your kubernetes clusters can schedule pods, your CI/CD pipelines are functioning as expected, or VPN connectivity with your partners is working as expected, and much more.</description></item><item><title>What is a Probe</title><link>https://cloudprober.org/docs/overview/probe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudprober.org/docs/overview/probe/</guid><description>Cloudprober runs probes, but what is a probe? A probe runs an operation, usually against a set of targets (e.g., your API servers), and looks for an expected outcome. Typically probes access your systems the same way as your customers, hence verifying systems&amp;rsquo; availability and performance from consumers&amp;rsquo; point of view. For example, an HTTP probe executes an HTTP request against a web server to verify that the web server is available.</description></item></channel></rss>