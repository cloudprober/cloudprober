// Configuration proto for AWS provider.
// Example config:
// {
//
//   # EC2 instances
//   ec2_instances {}
//
//   # RDS clusters
//   rds_clusters {
//     identifier: "arn"
//   }
//
//   # RDS instances
//   rds_instances {
//     identifier: "arn"
//   }
// }

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: config.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EC2Instances struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// How often resources should be refreshed.
	ReEvalSec     *int32 `protobuf:"varint,98,opt,name=re_eval_sec,json=reEvalSec,def=600" json:"re_eval_sec,omitempty"` // default 10 mins
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for EC2Instances fields.
const (
	Default_EC2Instances_ReEvalSec = int32(600)
)

func (x *EC2Instances) Reset() {
	*x = EC2Instances{}
	mi := &file_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EC2Instances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EC2Instances) ProtoMessage() {}

func (x *EC2Instances) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EC2Instances.ProtoReflect.Descriptor instead.
func (*EC2Instances) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{0}
}

func (x *EC2Instances) GetReEvalSec() int32 {
	if x != nil && x.ReEvalSec != nil {
		return *x.ReEvalSec
	}
	return Default_EC2Instances_ReEvalSec
}

// RDS (Amazon Relational Databases) Clusters discovery options.
type RDSClusters struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DB cluster identifier or the Amazon Resource Name (ARN) of the DB cluster
	// if specified, only the corresponding cluster information is returned.
	Identifier *string `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	// Filters to be added to the discovery and search.
	Filter []string `protobuf:"bytes,2,rep,name=filter" json:"filter,omitempty"`
	// Whether to includes information about clusters shared from other AWS accounts.
	IncludeShared *bool  `protobuf:"varint,3,opt,name=include_shared,json=includeShared" json:"include_shared,omitempty"`
	ReEvalSec     *int32 `protobuf:"varint,98,opt,name=re_eval_sec,json=reEvalSec,def=600" json:"re_eval_sec,omitempty"` // default 10 mins
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for RDSClusters fields.
const (
	Default_RDSClusters_ReEvalSec = int32(600)
)

func (x *RDSClusters) Reset() {
	*x = RDSClusters{}
	mi := &file_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RDSClusters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RDSClusters) ProtoMessage() {}

func (x *RDSClusters) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RDSClusters.ProtoReflect.Descriptor instead.
func (*RDSClusters) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{1}
}

func (x *RDSClusters) GetIdentifier() string {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return ""
}

func (x *RDSClusters) GetFilter() []string {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *RDSClusters) GetIncludeShared() bool {
	if x != nil && x.IncludeShared != nil {
		return *x.IncludeShared
	}
	return false
}

func (x *RDSClusters) GetReEvalSec() int32 {
	if x != nil && x.ReEvalSec != nil {
		return *x.ReEvalSec
	}
	return Default_RDSClusters_ReEvalSec
}

// RDS (Amazon Relational Databases) Clusters discovery options.
type RDSInstances struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// DB cluster identifier or the Amazon Resource Name (ARN) of the DB cluster
	// if specified, only the corresponding cluster information is returned.
	Identifier *string `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	// Filters to be added to the discovery and search.
	Filter []string `protobuf:"bytes,2,rep,name=filter" json:"filter,omitempty"`
	// Whether to includes information about clusters shared from other AWS accounts.
	IncludeShared *bool  `protobuf:"varint,3,opt,name=include_shared,json=includeShared" json:"include_shared,omitempty"`
	ReEvalSec     *int32 `protobuf:"varint,98,opt,name=re_eval_sec,json=reEvalSec,def=600" json:"re_eval_sec,omitempty"` // default 10 mins
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for RDSInstances fields.
const (
	Default_RDSInstances_ReEvalSec = int32(600)
)

func (x *RDSInstances) Reset() {
	*x = RDSInstances{}
	mi := &file_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RDSInstances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RDSInstances) ProtoMessage() {}

func (x *RDSInstances) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RDSInstances.ProtoReflect.Descriptor instead.
func (*RDSInstances) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{2}
}

func (x *RDSInstances) GetIdentifier() string {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return ""
}

func (x *RDSInstances) GetFilter() []string {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *RDSInstances) GetIncludeShared() bool {
	if x != nil && x.IncludeShared != nil {
		return *x.IncludeShared
	}
	return false
}

func (x *RDSInstances) GetReEvalSec() int32 {
	if x != nil && x.ReEvalSec != nil {
		return *x.ReEvalSec
	}
	return Default_RDSInstances_ReEvalSec
}

// AWS provider config.
type ProviderConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Profile for the session.
	ProfileName *string `protobuf:"bytes,1,opt,name=profile_name,json=profileName" json:"profile_name,omitempty"`
	// AWS region
	Region *string `protobuf:"bytes,2,opt,name=region" json:"region,omitempty"`
	// EC2 instances discovery options. This field should be declared for the AWS
	// instances discovery to be enabled.
	Ec2Instances *EC2Instances `protobuf:"bytes,3,opt,name=ec2_instances,json=ec2Instances" json:"ec2_instances,omitempty"`
	// RDS instances discovery options.
	RdsInstances *RDSInstances `protobuf:"bytes,6,opt,name=rds_instances,json=rdsInstances" json:"rds_instances,omitempty"`
	// RDS clusters discovery options.
	RdsClusters   *RDSClusters `protobuf:"bytes,7,opt,name=rds_clusters,json=rdsClusters" json:"rds_clusters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProviderConfig) Reset() {
	*x = ProviderConfig{}
	mi := &file_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProviderConfig) ProtoMessage() {}

func (x *ProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProviderConfig.ProtoReflect.Descriptor instead.
func (*ProviderConfig) Descriptor() ([]byte, []int) {
	return file_config_proto_rawDescGZIP(), []int{3}
}

func (x *ProviderConfig) GetProfileName() string {
	if x != nil && x.ProfileName != nil {
		return *x.ProfileName
	}
	return ""
}

func (x *ProviderConfig) GetRegion() string {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return ""
}

func (x *ProviderConfig) GetEc2Instances() *EC2Instances {
	if x != nil {
		return x.Ec2Instances
	}
	return nil
}

func (x *ProviderConfig) GetRdsInstances() *RDSInstances {
	if x != nil {
		return x.RdsInstances
	}
	return nil
}

func (x *ProviderConfig) GetRdsClusters() *RDSClusters {
	if x != nil {
		return x.RdsClusters
	}
	return nil
}

var File_config_proto protoreflect.FileDescriptor

const file_config_proto_rawDesc = "" +
	"\n" +
	"\fconfig.proto\x12\x13cloudprober.rds.aws\"3\n" +
	"\fEC2Instances\x12#\n" +
	"\vre_eval_sec\x18b \x01(\x05:\x03600R\treEvalSec\"\x91\x01\n" +
	"\vRDSClusters\x12\x1e\n" +
	"\n" +
	"identifier\x18\x01 \x01(\tR\n" +
	"identifier\x12\x16\n" +
	"\x06filter\x18\x02 \x03(\tR\x06filter\x12%\n" +
	"\x0einclude_shared\x18\x03 \x01(\bR\rincludeShared\x12#\n" +
	"\vre_eval_sec\x18b \x01(\x05:\x03600R\treEvalSec\"\x92\x01\n" +
	"\fRDSInstances\x12\x1e\n" +
	"\n" +
	"identifier\x18\x01 \x01(\tR\n" +
	"identifier\x12\x16\n" +
	"\x06filter\x18\x02 \x03(\tR\x06filter\x12%\n" +
	"\x0einclude_shared\x18\x03 \x01(\bR\rincludeShared\x12#\n" +
	"\vre_eval_sec\x18b \x01(\x05:\x03600R\treEvalSec\"\xa0\x02\n" +
	"\x0eProviderConfig\x12!\n" +
	"\fprofile_name\x18\x01 \x01(\tR\vprofileName\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12F\n" +
	"\rec2_instances\x18\x03 \x01(\v2!.cloudprober.rds.aws.EC2InstancesR\fec2Instances\x12F\n" +
	"\rrds_instances\x18\x06 \x01(\v2!.cloudprober.rds.aws.RDSInstancesR\frdsInstances\x12C\n" +
	"\frds_clusters\x18\a \x01(\v2 .cloudprober.rds.aws.RDSClustersR\vrdsClustersB;Z9github.com/cloudprober/cloudprober/internal/rds/aws/proto"

var (
	file_config_proto_rawDescOnce sync.Once
	file_config_proto_rawDescData []byte
)

func file_config_proto_rawDescGZIP() []byte {
	file_config_proto_rawDescOnce.Do(func() {
		file_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_config_proto_rawDesc), len(file_config_proto_rawDesc)))
	})
	return file_config_proto_rawDescData
}

var file_config_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_config_proto_goTypes = []any{
	(*EC2Instances)(nil),   // 0: cloudprober.rds.aws.EC2Instances
	(*RDSClusters)(nil),    // 1: cloudprober.rds.aws.RDSClusters
	(*RDSInstances)(nil),   // 2: cloudprober.rds.aws.RDSInstances
	(*ProviderConfig)(nil), // 3: cloudprober.rds.aws.ProviderConfig
}
var file_config_proto_depIdxs = []int32{
	0, // 0: cloudprober.rds.aws.ProviderConfig.ec2_instances:type_name -> cloudprober.rds.aws.EC2Instances
	2, // 1: cloudprober.rds.aws.ProviderConfig.rds_instances:type_name -> cloudprober.rds.aws.RDSInstances
	1, // 2: cloudprober.rds.aws.ProviderConfig.rds_clusters:type_name -> cloudprober.rds.aws.RDSClusters
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_config_proto_init() }
func file_config_proto_init() {
	if File_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_proto_rawDesc), len(file_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_proto_goTypes,
		DependencyIndexes: file_config_proto_depIdxs,
		MessageInfos:      file_config_proto_msgTypes,
	}.Build()
	File_config_proto = out.File
	file_config_proto_goTypes = nil
	file_config_proto_depIdxs = nil
}
