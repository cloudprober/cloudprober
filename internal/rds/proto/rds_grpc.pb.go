// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.5
// source: github.com/cloudprober/cloudprober/internal/rds/proto/rds.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ResourceDiscovery_ListResources_FullMethodName = "/cloudprober.rds.ResourceDiscovery/ListResources"
)

// ResourceDiscoveryClient is the client API for ResourceDiscovery service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ResourceDiscoveryClient interface {
	// ListResources returns the list of resources matching the URI provided in
	// the request.
	ListResources(ctx context.Context, in *ListResourcesRequest, opts ...grpc.CallOption) (*ListResourcesResponse, error)
}

type resourceDiscoveryClient struct {
	cc grpc.ClientConnInterface
}

func NewResourceDiscoveryClient(cc grpc.ClientConnInterface) ResourceDiscoveryClient {
	return &resourceDiscoveryClient{cc}
}

func (c *resourceDiscoveryClient) ListResources(ctx context.Context, in *ListResourcesRequest, opts ...grpc.CallOption) (*ListResourcesResponse, error) {
	out := new(ListResourcesResponse)
	err := c.cc.Invoke(ctx, ResourceDiscovery_ListResources_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ResourceDiscoveryServer is the server API for ResourceDiscovery service.
// All implementations must embed UnimplementedResourceDiscoveryServer
// for forward compatibility
type ResourceDiscoveryServer interface {
	// ListResources returns the list of resources matching the URI provided in
	// the request.
	ListResources(context.Context, *ListResourcesRequest) (*ListResourcesResponse, error)
	mustEmbedUnimplementedResourceDiscoveryServer()
}

// UnimplementedResourceDiscoveryServer must be embedded to have forward compatible implementations.
type UnimplementedResourceDiscoveryServer struct {
}

func (UnimplementedResourceDiscoveryServer) ListResources(context.Context, *ListResourcesRequest) (*ListResourcesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListResources not implemented")
}
func (UnimplementedResourceDiscoveryServer) mustEmbedUnimplementedResourceDiscoveryServer() {}

// UnsafeResourceDiscoveryServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ResourceDiscoveryServer will
// result in compilation errors.
type UnsafeResourceDiscoveryServer interface {
	mustEmbedUnimplementedResourceDiscoveryServer()
}

func RegisterResourceDiscoveryServer(s grpc.ServiceRegistrar, srv ResourceDiscoveryServer) {
	s.RegisterService(&ResourceDiscovery_ServiceDesc, srv)
}

func _ResourceDiscovery_ListResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListResourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceDiscoveryServer).ListResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ResourceDiscovery_ListResources_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceDiscoveryServer).ListResources(ctx, req.(*ListResourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ResourceDiscovery_ServiceDesc is the grpc.ServiceDesc for ResourceDiscovery service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ResourceDiscovery_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "cloudprober.rds.ResourceDiscovery",
	HandlerType: (*ResourceDiscoveryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListResources",
			Handler:    _ResourceDiscovery_ListResources_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/cloudprober/cloudprober/internal/rds/proto/rds.proto",
}
